{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/apps-dev/myweather-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport './quotes-service/quote-service.css';\nimport Search from './components/search/search';\nimport Forecast from './components/forecast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport fetchQuote from './quotes-service/quote-service';\nimport QuoteDisplay from './quotes-service/QuoteDisplay';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [quote, setQuote] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const CurrentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${WEATHER_API_KEY}&&units=metric`);\n    const ForecastWeatherFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${WEATHER_API_KEY}&&units=metric`);\n    Promise.all([CurrentWeatherFetch, ForecastWeatherFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n      const quote = await fetchQuote(searchData.label);\n      setQuote(quote);\n    }).catch(err => {\n      console.error('Error fetching weather data:', err);\n    });\n  };\n  console.log(currentWeather);\n  console.log(forecast);\n  console.log(quote);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onSearchChange: handleOnSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), currentWeather && /*#__PURE__*/React.createElement(CurrentWeather, {\n    data: currentWeather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }\n  }), quote && /*#__PURE__*/React.createElement(QuoteDisplay, {\n    quote: quote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), forecast && /*#__PURE__*/React.createElement(Forecast, {\n    data: forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","Search","Forecast","CurrentWeather","fetchQuote","QuoteDisplay","WEATHER_API_URL","WEATHER_API_KEY","App","currentWeather","setCurrentWeather","forecast","setForecast","quote","setQuote","handleOnSearchChange","searchData","lat","lon","value","split","CurrentWeatherFetch","fetch","ForecastWeatherFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","console","error","log","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","data"],"sources":["/home/vboxuser/apps-dev/myweather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport './quotes-service/quote-service.css'; \nimport Search from './components/search/search';\nimport Forecast from './components/forecast/forecast';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport fetchQuote from './quotes-service/quote-service';\nimport QuoteDisplay from './quotes-service/QuoteDisplay';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [quote, setQuote] = useState(null); \n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const CurrentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${WEATHER_API_KEY}&&units=metric`)\n    const ForecastWeatherFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${WEATHER_API_KEY}&&units=metric`)\n    \n    Promise.all([CurrentWeatherFetch, ForecastWeatherFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n\n        const quote = await fetchQuote(searchData.label);\n        setQuote(quote);\n      })\n      .catch(err => {\n        console.error('Error fetching weather data:', err);\n      });\n  }\n\n  console.log(currentWeather);\n  console.log(forecast);\n  console.log(quote);\n\n  return (\n    <div className=\"container\">\n      <Search onSearchChange={handleOnSearchChange} />\n      {currentWeather && <CurrentWeather data={currentWeather} />}\n      {quote && <QuoteDisplay quote={quote} />}\n      {forecast && <Forecast data={forecast}/>}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}