{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/apps-dev/myweather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Search from './components/search/search.js';\nimport Forecast from './components/forecast/forecast.js';\nimport CurrentWeather from './components/current-weather/current-weather.js';\nimport WeatherNews from './components/WeatherNews/WeatherNews.js';\nimport WeatherGraph from './components/WeatherGraph/WeatherGraph.js';\nimport fetchAndSummarizeWeatherNews from './services/gemini-service.js';\nimport { REACT_APP_WEATHER_API_URL, REACT_APP_WEATHER_API_KEY } from './api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [weatherNewsSummary, setWeatherNewsSummary] = useState(null);\n  const [flagUrl, setFlagUrl] = useState(null); // State to store the flag URL\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const CurrentWeatherFetch = fetch(`${REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`);\n    const ForecastWeatherFetch = fetch(`${REACT_APP_WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`);\n    Promise.all([CurrentWeatherFetch, ForecastWeatherFetch]).then(async response => {\n      var _weatherResponse$sys;\n      if (!response[0].ok || !response[1].ok) {\n        throw new Error(\"Failed to fetch weather data\");\n      }\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n\n      // Filter 24-hour forecast data\n      const today = new Date().toISOString().split(\"T\")[0]; // Get today's date in YYYY-MM-DD format\n      const hourlyData = forecastResponse.list.filter(entry => entry.dt_txt.startsWith(today));\n      setHourlyForecast(hourlyData); // Set the 24-hour forecast data\n\n      // Fetch and summarize weather news using Google Gemini\n      try {\n        const newsSummary = await fetchAndSummarizeWeatherNews(searchData.label);\n        setWeatherNewsSummary(newsSummary);\n      } catch (error) {\n        console.error(\"Error fetching weather news summary:\", error.message);\n        setWeatherNewsSummary(\"Unable to fetch weather news at this time.\");\n      }\n\n      // Fetch the flag URL\n      const countryCode = ((_weatherResponse$sys = weatherResponse.sys) === null || _weatherResponse$sys === void 0 ? void 0 : _weatherResponse$sys.country) || \"unknown\"; // Handle undefined country code\n      const flagUrl = `https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`; // Generate the flag URL\n      setFlagUrl(flagUrl);\n    }).catch(err => {\n      console.error(err);\n      setWeatherNewsSummary(\"Unable to fetch weather data at this time.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        flagUrl: flagUrl,\n        data: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 28\n      }, this), weatherNewsSummary && /*#__PURE__*/_jsxDEV(WeatherNews, {\n        summary: weatherNewsSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), hourlyForecast.length > 0 && /*#__PURE__*/_jsxDEV(WeatherGraph, {\n        data: hourlyForecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 39\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n      data: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q1Gv4F7dj7a/TuJC2zwF2RZLF20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Search","Forecast","CurrentWeather","WeatherNews","WeatherGraph","fetchAndSummarizeWeatherNews","REACT_APP_WEATHER_API_URL","REACT_APP_WEATHER_API_KEY","jsxDEV","_jsxDEV","App","_s","currentWeather","setCurrentWeather","forecast","setForecast","weatherNewsSummary","setWeatherNewsSummary","flagUrl","setFlagUrl","hourlyForecast","setHourlyForecast","handleOnSearchChange","searchData","lat","lon","value","split","CurrentWeatherFetch","fetch","ForecastWeatherFetch","Promise","all","then","response","_weatherResponse$sys","ok","Error","weatherResponse","json","forecastResponse","city","label","today","Date","toISOString","hourlyData","list","filter","entry","dt_txt","startsWith","newsSummary","error","console","message","countryCode","sys","country","toLowerCase","catch","err","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","data","summary","length","_c","$RefreshReg$"],"sources":["/home/vboxuser/apps-dev/myweather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Search from './components/search/search.js';\nimport Forecast from './components/forecast/forecast.js';\nimport CurrentWeather from './components/current-weather/current-weather.js';\nimport WeatherNews from './components/WeatherNews/WeatherNews.js';\nimport WeatherGraph from './components/WeatherGraph/WeatherGraph.js';\nimport fetchAndSummarizeWeatherNews from './services/gemini-service.js';\nimport { REACT_APP_WEATHER_API_URL, REACT_APP_WEATHER_API_KEY } from './api.js';\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [weatherNewsSummary, setWeatherNewsSummary] = useState(null);\n  const [flagUrl, setFlagUrl] = useState(null); // State to store the flag URL\n  const [hourlyForecast, setHourlyForecast] = useState([]); \n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const CurrentWeatherFetch = fetch(\n      `${REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`\n    );\n\n    const ForecastWeatherFetch = fetch(\n      `${REACT_APP_WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`\n    );\n\n    Promise.all([CurrentWeatherFetch, ForecastWeatherFetch])\n      .then(async (response) => {\n        if (!response[0].ok || !response[1].ok) {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n\n       // Filter 24-hour forecast data\n       const today = new Date().toISOString().split(\"T\")[0]; // Get today's date in YYYY-MM-DD format\n       const hourlyData = forecastResponse.list.filter((entry) =>\n         entry.dt_txt.startsWith(today)\n       );\n       setHourlyForecast(hourlyData); // Set the 24-hour forecast data\n\n        // Fetch and summarize weather news using Google Gemini\n        try {\n          const newsSummary = await fetchAndSummarizeWeatherNews(searchData.label);\n          setWeatherNewsSummary(newsSummary);\n        } catch (error) {\n          console.error(\"Error fetching weather news summary:\", error.message);\n          setWeatherNewsSummary(\"Unable to fetch weather news at this time.\");\n        }\n\n        // Fetch the flag URL\n        const countryCode = weatherResponse.sys?.country || \"unknown\"; // Handle undefined country code\n        const flagUrl = `https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`; // Generate the flag URL\n        setFlagUrl(flagUrl);\n      })\n      .catch((err) => {\n        console.error(err);\n        setWeatherNewsSummary(\"Unable to fetch weather data at this time.\");\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <Search onSearchChange={handleOnSearchChange} />\n      <div className=\"main-container\">\n        {currentWeather && <CurrentWeather flagUrl={flagUrl} data={currentWeather} />}\n        {weatherNewsSummary && (\n          <WeatherNews summary={weatherNewsSummary} />\n        )}\n        {hourlyForecast.length > 0 && <WeatherGraph data={hourlyForecast} />} {/* Render the graph below WeatherNews */}\n        </div>\n      {forecast && <Forecast data={forecast} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}