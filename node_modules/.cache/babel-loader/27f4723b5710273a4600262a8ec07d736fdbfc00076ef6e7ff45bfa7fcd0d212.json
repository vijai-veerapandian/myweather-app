{"ast":null,"code":"// filepath: /home/vboxuser/apps-dev/myweather-app/src/services/gemini-service.js\nconst fetchAndSummarizeWeatherNews = async city => {\n  try {\n    const backendUrl = process.env.REACT_APP_BACKEND_AI_URL || 'http://localhost:5000'; // Use environment variable or fallback to localhost\n    const response = await fetch(`${backendUrl}/api/weather-news`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        city\n      })\n    });\n    const data = await response.json();\n    if (data && data.news) {\n      return data.news; // Return the summarized weather news\n    } else {\n      return 'No relevant weather news found.';\n    }\n  } catch (error) {\n    console.error('Error fetching weather news:', error.message);\n    return 'Error: Unable to fetch weather news.';\n  }\n};\nexport default fetchAndSummarizeWeatherNews;","map":{"version":3,"names":["fetchAndSummarizeWeatherNews","city","backendUrl","process","env","REACT_APP_BACKEND_AI_URL","response","fetch","method","headers","body","JSON","stringify","data","json","news","error","console","message"],"sources":["/home/vboxuser/apps-dev/myweather-app3/myweather-app/src/services/gemini-service.js"],"sourcesContent":["// filepath: /home/vboxuser/apps-dev/myweather-app/src/services/gemini-service.js\nconst fetchAndSummarizeWeatherNews = async (city) => {\n    try {\n        const backendUrl = process.env.REACT_APP_BACKEND_AI_URL || 'http://localhost:5000'; // Use environment variable or fallback to localhost\n        const response = await fetch(`${backendUrl}/api/weather-news`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ city }),\n        });\n\n        const data = await response.json();\n\n        if (data && data.news) {\n            return data.news; // Return the summarized weather news\n        } else {\n            return 'No relevant weather news found.';\n        }\n    } catch (error) {\n        console.error('Error fetching weather news:', error.message);\n        return 'Error: Unable to fetch weather news.';\n    }\n};\n\nexport default fetchAndSummarizeWeatherNews;"],"mappings":"AAAA;AACA,MAAMA,4BAA4B,GAAG,MAAOC,IAAI,IAAK;EACjD,IAAI;IACA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,IAAI,uBAAuB,CAAC,CAAC;IACpF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,UAAU,mBAAmB,EAAE;MAC3DM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX;MAAK,CAAC;IACjC,CAAC,CAAC;IAEF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,IAAIA,IAAI,CAACE,IAAI,EAAE;MACnB,OAAOF,IAAI,CAACE,IAAI,CAAC,CAAC;IACtB,CAAC,MAAM;MACH,OAAO,iCAAiC;IAC5C;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC5D,OAAO,sCAAsC;EACjD;AACJ,CAAC;AAED,eAAelB,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}