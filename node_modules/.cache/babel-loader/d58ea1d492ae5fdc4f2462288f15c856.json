{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/apps-dev/myweather-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Search from './components/search/search.js';\nimport Forecast from './components/forecast/forecast.js';\nimport CurrentWeather from './components/current-weather/current-weather.js';\nimport WeatherNews from './components/WeatherNews/WeatherNews.js';\nimport WeatherGraph from './components/WeatherGraph/WeatherGraph.js';\nimport fetchAndSummarizeWeatherNews from './services/gemini-service.js';\nimport { REACT_APP_WEATHER_API_URL, REACT_APP_WEATHER_API_KEY } from './api.js';\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [weatherNewsSummary, setWeatherNewsSummary] = useState(null);\n  const [flagUrl, setFlagUrl] = useState(null); // State to store the flag URL\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const CurrentWeatherFetch = fetch(`${REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`);\n    const ForecastWeatherFetch = fetch(`${REACT_APP_WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`);\n    Promise.all([CurrentWeatherFetch, ForecastWeatherFetch]).then(async response => {\n      var _weatherResponse$sys;\n      if (!response[0].ok || !response[1].ok) {\n        throw new Error(\"Failed to fetch weather data\");\n      }\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n\n      // Filter 24-hour forecast data\n      const today = new Date().toISOString().split(\"T\")[0]; // Get today's date in YYYY-MM-DD format\n      const hourlyData = forecastResponse.list.filter(entry => entry.dt_txt.startsWith(today));\n      setHourlyForecast(hourlyData); // Set the 24-hour forecast data\n\n      // Fetch and summarize weather news using Google Gemini\n      try {\n        const newsSummary = await fetchAndSummarizeWeatherNews(searchData.label);\n        setWeatherNewsSummary(newsSummary);\n      } catch (error) {\n        console.error(\"Error fetching weather news summary:\", error.message);\n        setWeatherNewsSummary(\"Unable to fetch weather news at this time.\");\n      }\n\n      // Fetch the flag URL\n      const countryCode = ((_weatherResponse$sys = weatherResponse.sys) === null || _weatherResponse$sys === void 0 ? void 0 : _weatherResponse$sys.country) || \"unknown\"; // Handle undefined country code\n      const flagUrl = `https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`; // Generate the flag URL\n      setFlagUrl(flagUrl);\n    }).catch(err => {\n      console.error(err);\n      setWeatherNewsSummary(\"Unable to fetch weather data at this time.\");\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onSearchChange: handleOnSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, currentWeather && /*#__PURE__*/React.createElement(CurrentWeather, {\n    flagUrl: flagUrl,\n    data: currentWeather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 28\n    }\n  }), weatherNewsSummary && /*#__PURE__*/React.createElement(WeatherNews, {\n    summary: weatherNewsSummary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), hourlyForecast.length > 0 && /*#__PURE__*/React.createElement(WeatherGraph, {\n    data: hourlyForecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 39\n    }\n  }), \" \"), forecast && /*#__PURE__*/React.createElement(Forecast, {\n    data: forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","Search","Forecast","CurrentWeather","WeatherNews","WeatherGraph","fetchAndSummarizeWeatherNews","REACT_APP_WEATHER_API_URL","REACT_APP_WEATHER_API_KEY","App","currentWeather","setCurrentWeather","forecast","setForecast","weatherNewsSummary","setWeatherNewsSummary","flagUrl","setFlagUrl","hourlyForecast","setHourlyForecast","handleOnSearchChange","searchData","lat","lon","value","split","CurrentWeatherFetch","fetch","ForecastWeatherFetch","Promise","all","then","response","_weatherResponse$sys","ok","Error","weatherResponse","json","forecastResponse","city","label","today","Date","toISOString","hourlyData","list","filter","entry","dt_txt","startsWith","newsSummary","error","console","message","countryCode","sys","country","toLowerCase","catch","err","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","data","summary","length"],"sources":["/home/vboxuser/apps-dev/myweather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Search from './components/search/search.js';\nimport Forecast from './components/forecast/forecast.js';\nimport CurrentWeather from './components/current-weather/current-weather.js';\nimport WeatherNews from './components/WeatherNews/WeatherNews.js';\nimport WeatherGraph from './components/WeatherGraph/WeatherGraph.js';\nimport fetchAndSummarizeWeatherNews from './services/gemini-service.js';\nimport { REACT_APP_WEATHER_API_URL, REACT_APP_WEATHER_API_KEY } from './api.js';\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [weatherNewsSummary, setWeatherNewsSummary] = useState(null);\n  const [flagUrl, setFlagUrl] = useState(null); // State to store the flag URL\n  const [hourlyForecast, setHourlyForecast] = useState([]); \n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const CurrentWeatherFetch = fetch(\n      `${REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`\n    );\n\n    const ForecastWeatherFetch = fetch(\n      `${REACT_APP_WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`\n    );\n\n    Promise.all([CurrentWeatherFetch, ForecastWeatherFetch])\n      .then(async (response) => {\n        if (!response[0].ok || !response[1].ok) {\n          throw new Error(\"Failed to fetch weather data\");\n        }\n\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n\n       // Filter 24-hour forecast data\n       const today = new Date().toISOString().split(\"T\")[0]; // Get today's date in YYYY-MM-DD format\n       const hourlyData = forecastResponse.list.filter((entry) =>\n         entry.dt_txt.startsWith(today)\n       );\n       setHourlyForecast(hourlyData); // Set the 24-hour forecast data\n\n        // Fetch and summarize weather news using Google Gemini\n        try {\n          const newsSummary = await fetchAndSummarizeWeatherNews(searchData.label);\n          setWeatherNewsSummary(newsSummary);\n        } catch (error) {\n          console.error(\"Error fetching weather news summary:\", error.message);\n          setWeatherNewsSummary(\"Unable to fetch weather news at this time.\");\n        }\n\n        // Fetch the flag URL\n        const countryCode = weatherResponse.sys?.country || \"unknown\"; // Handle undefined country code\n        const flagUrl = `https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`; // Generate the flag URL\n        setFlagUrl(flagUrl);\n      })\n      .catch((err) => {\n        console.error(err);\n        setWeatherNewsSummary(\"Unable to fetch weather data at this time.\");\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <Search onSearchChange={handleOnSearchChange} />\n      <div className=\"main-container\">\n        {currentWeather && <CurrentWeather flagUrl={flagUrl} data={currentWeather} />}\n        {weatherNewsSummary && (\n          <WeatherNews summary={weatherNewsSummary} />\n        )}\n        {hourlyForecast.length > 0 && <WeatherGraph data={hourlyForecast} />} {/* Render the graph below WeatherNews */}\n        </div>\n      {forecast && <Forecast data={forecast} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}