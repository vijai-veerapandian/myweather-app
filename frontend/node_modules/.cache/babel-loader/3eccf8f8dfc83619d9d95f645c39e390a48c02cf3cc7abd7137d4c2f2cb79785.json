{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/apps-dev/myweather-app3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Search from './components/search/search.js';\nimport Forecast from './components/forecast/forecast.js';\nimport CurrentWeather from './components/current-weather/current-weather.js';\nimport WeatherNews from './components/WeatherNews/WeatherNews.js';\nimport WeatherGraph from './components/WeatherGraph/WeatherGraph.js';\nimport fetchAndSummarizeWeatherNews from './services/gemini-service.js';\nimport { REACT_APP_WEATHER_API_URL, REACT_APP_WEATHER_API_KEY } from './api.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variables\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [weatherNewsSummary, setWeatherNewsSummary] = useState(null);\n  const [flagUrl, setFlagUrl] = useState(null);\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleOnSearchChange = async searchData => {\n    // Start loading and clear previous states\n    setIsLoading(true);\n    setError(null);\n    setCurrentWeather(null);\n    setForecast(null);\n    setHourlyForecast([]);\n    setFlagUrl(null);\n    setWeatherNewsSummary(null);\n\n    // Validate searchData\n    if (!searchData || !searchData.value || typeof searchData.value !== 'string') {\n      setError(\"Invalid search data provided.\");\n      setIsLoading(false);\n      return;\n    }\n    const valueParts = searchData.value.split(\" \");\n    if (valueParts.length < 2) {\n      setError(\"Invalid location data format.\");\n      setIsLoading(false);\n      return;\n    }\n    const [lat, lon] = valueParts;\n    try {\n      var _weatherData$sys;\n      // Fetch weather and forecast data concurrently\n      const [weatherResponse, forecastResponse] = await Promise.all([fetch(`${REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`), fetch(`${REACT_APP_WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`)]);\n\n      // Check if responses are OK\n      if (!weatherResponse.ok || !forecastResponse.ok) {\n        throw new Error(\"Failed to fetch weather data.\");\n      }\n      const weatherData = await weatherResponse.json();\n      const forecastData = await forecastResponse.json();\n\n      // Update state with fetched data\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherData\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastData\n      });\n\n      // Filter hourly forecast data for today\n      const today = new Date().toISOString().split(\"T\")[0];\n      const hourlyData = forecastData.list.filter(entry => entry.dt_txt.startsWith(today));\n      setHourlyForecast(hourlyData);\n\n      // Fetch the flag URL\n      const countryCode = ((_weatherData$sys = weatherData.sys) === null || _weatherData$sys === void 0 ? void 0 : _weatherData$sys.country) || \"unknown\";\n      const flagUrl = `https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`;\n      setFlagUrl(flagUrl);\n\n      // Fetch and summarize weather news\n      try {\n        const cityName = searchData.label || \"the selected location\";\n        const newsSummary = await fetchAndSummarizeWeatherNews(cityName);\n        setWeatherNewsSummary(newsSummary);\n      } catch (newsError) {\n        console.error(\"Error fetching weather news summary:\", newsError.message);\n        setWeatherNewsSummary(\"Unable to fetch weather news summary.\");\n      }\n    } catch (err) {\n      console.error(\"Error during data fetching:\", err);\n      setError(`Error: ${err.message || \"Could not fetch data. Please check your connection or API keys.\"}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n          flagUrl: flagUrl,\n          data: currentWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 32\n        }, this), weatherNewsSummary && /*#__PURE__*/_jsxDEV(WeatherNews, {\n          summary: weatherNewsSummary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 36\n        }, this), hourlyForecast.length > 0 && /*#__PURE__*/_jsxDEV(WeatherGraph, {\n          data: hourlyForecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), forecast && /*#__PURE__*/_jsxDEV(Forecast, {\n        data: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WPuatqitMgdDj6itsUCg2IbkVSE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Search","Forecast","CurrentWeather","WeatherNews","WeatherGraph","fetchAndSummarizeWeatherNews","REACT_APP_WEATHER_API_URL","REACT_APP_WEATHER_API_KEY","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentWeather","setCurrentWeather","forecast","setForecast","weatherNewsSummary","setWeatherNewsSummary","flagUrl","setFlagUrl","hourlyForecast","setHourlyForecast","isLoading","setIsLoading","error","setError","handleOnSearchChange","searchData","value","valueParts","split","length","lat","lon","_weatherData$sys","weatherResponse","forecastResponse","Promise","all","fetch","ok","Error","weatherData","json","forecastData","city","label","today","Date","toISOString","hourlyData","list","filter","entry","dt_txt","startsWith","countryCode","sys","country","toLowerCase","cityName","newsSummary","newsError","console","message","err","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","data","summary","_c","$RefreshReg$"],"sources":["/home/vboxuser/apps-dev/myweather-app3/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Search from './components/search/search.js';\nimport Forecast from './components/forecast/forecast.js';\nimport CurrentWeather from './components/current-weather/current-weather.js';\nimport WeatherNews from './components/WeatherNews/WeatherNews.js';\nimport WeatherGraph from './components/WeatherGraph/WeatherGraph.js';\nimport fetchAndSummarizeWeatherNews from './services/gemini-service.js';\nimport { REACT_APP_WEATHER_API_URL, REACT_APP_WEATHER_API_KEY } from './api.js';\n\nfunction App() {\n  // State variables\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const [weatherNewsSummary, setWeatherNewsSummary] = useState(null);\n  const [flagUrl, setFlagUrl] = useState(null);\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleOnSearchChange = async (searchData) => {\n    // Start loading and clear previous states\n    setIsLoading(true);\n    setError(null);\n    setCurrentWeather(null);\n    setForecast(null);\n    setHourlyForecast([]);\n    setFlagUrl(null);\n    setWeatherNewsSummary(null);\n\n    // Validate searchData\n    if (!searchData || !searchData.value || typeof searchData.value !== 'string') {\n      setError(\"Invalid search data provided.\");\n      setIsLoading(false);\n      return;\n    }\n\n    const valueParts = searchData.value.split(\" \");\n    if (valueParts.length < 2) {\n      setError(\"Invalid location data format.\");\n      setIsLoading(false);\n      return;\n    }\n\n    const [lat, lon] = valueParts;\n\n    try {\n      // Fetch weather and forecast data concurrently\n      const [weatherResponse, forecastResponse] = await Promise.all([\n        fetch(`${REACT_APP_WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`),\n        fetch(`${REACT_APP_WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${REACT_APP_WEATHER_API_KEY}`)\n      ]);\n\n      // Check if responses are OK\n      if (!weatherResponse.ok || !forecastResponse.ok) {\n        throw new Error(\"Failed to fetch weather data.\");\n      }\n\n      const weatherData = await weatherResponse.json();\n      const forecastData = await forecastResponse.json();\n\n      // Update state with fetched data\n      setCurrentWeather({ city: searchData.label, ...weatherData });\n      setForecast({ city: searchData.label, ...forecastData });\n\n      // Filter hourly forecast data for today\n      const today = new Date().toISOString().split(\"T\")[0];\n      const hourlyData = forecastData.list.filter((entry) =>\n        entry.dt_txt.startsWith(today)\n      );\n      setHourlyForecast(hourlyData);\n\n      // Fetch the flag URL\n      const countryCode = weatherData.sys?.country || \"unknown\";\n      const flagUrl = `https://flagcdn.com/w320/${countryCode.toLowerCase()}.png`;\n      setFlagUrl(flagUrl);\n\n      // Fetch and summarize weather news\n      try {\n        const cityName = searchData.label || \"the selected location\";\n        const newsSummary = await fetchAndSummarizeWeatherNews(cityName);\n        setWeatherNewsSummary(newsSummary);\n      } catch (newsError) {\n        console.error(\"Error fetching weather news summary:\", newsError.message);\n        setWeatherNewsSummary(\"Unable to fetch weather news summary.\");\n      }\n    } catch (err) {\n      console.error(\"Error during data fetching:\", err);\n      setError(`Error: ${err.message || \"Could not fetch data. Please check your connection or API keys.\"}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* Search component */}\n      <Search onSearchChange={handleOnSearchChange} />\n\n      {/* Loading Indicator */}\n      {isLoading && <div className=\"loading-indicator\">Loading weather data...</div>}\n\n      {/* Error Display */}\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Main Content Area */}\n      {!isLoading && !error && (\n        <>\n          <div className=\"main-container\">\n            {currentWeather && <CurrentWeather flagUrl={flagUrl} data={currentWeather} />}\n            {weatherNewsSummary && <WeatherNews summary={weatherNewsSummary} />}\n            {hourlyForecast.length > 0 && <WeatherGraph data={hourlyForecast} />}\n          </div>\n          {forecast && <Forecast data={forecast} />}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}