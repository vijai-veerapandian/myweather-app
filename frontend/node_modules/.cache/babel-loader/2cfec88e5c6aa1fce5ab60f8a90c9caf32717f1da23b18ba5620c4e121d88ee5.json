{"ast":null,"code":"// filepath: /home/vboxuser/apps-dev/myweather-app/src/services/gemini-service.js\nconst fetchAndSummarizeWeatherNews = async city => {\n  if (!process.env.REACT_APP_BACKEND_AI_URL) {\n    console.error('Error: REACT_APP_BACKEND_AI_URL is not defined. Please set it in your environment variables.');\n    return 'Error: Backend URL is not configured.';\n  }\n  const backendUrl = process.env.REACT_APP_BACKEND_AI_URL;\n  if (!city || typeof city !== 'string') {\n    console.error('Invalid city parameter. City must be a non-empty string.');\n    return 'Error: Invalid city parameter.';\n  }\n  try {\n    const response = await fetch(`${backendUrl}/api/weather-news`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        city\n      })\n    });\n    if (!response.ok) {\n      console.error(`Error: Received status ${response.status} from ${backendUrl}/api/weather-news`);\n      return `Error: Unable to fetch weather news (status: ${response.status}).`;\n    }\n    const data = await response.json();\n    if (data && data.news) {\n      return data.news; // Return the summarized weather news\n    } else {\n      console.warn('No relevant weather news found for the given city.');\n      return 'No relevant weather news found.';\n    }\n  } catch (error) {\n    console.error(`Error fetching weather news for city \"${city}\" from ${backendUrl}:`, error.message);\n    return 'Error: Unable to fetch weather news.';\n  }\n};\nexport default fetchAndSummarizeWeatherNews;","map":{"version":3,"names":["fetchAndSummarizeWeatherNews","city","process","env","REACT_APP_BACKEND_AI_URL","console","error","backendUrl","response","fetch","method","headers","body","JSON","stringify","ok","status","data","json","news","warn","message"],"sources":["/home/vboxuser/apps-dev/myweather-app3/frontend-server/src/services/gemini-service.js"],"sourcesContent":["// filepath: /home/vboxuser/apps-dev/myweather-app/src/services/gemini-service.js\nconst fetchAndSummarizeWeatherNews = async (city) => {\n    if (!process.env.REACT_APP_BACKEND_AI_URL) {\n        console.error('Error: REACT_APP_BACKEND_AI_URL is not defined. Please set it in your environment variables.');\n        return 'Error: Backend URL is not configured.';\n    }\n\n    const backendUrl = process.env.REACT_APP_BACKEND_AI_URL;\n\n    if (!city || typeof city !== 'string') {\n        console.error('Invalid city parameter. City must be a non-empty string.');\n        return 'Error: Invalid city parameter.';\n    }\n\n    try {\n        const response = await fetch(`${backendUrl}/api/weather-news`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ city }),\n        });\n\n        if (!response.ok) {\n            console.error(`Error: Received status ${response.status} from ${backendUrl}/api/weather-news`);\n            return `Error: Unable to fetch weather news (status: ${response.status}).`;\n        }\n\n        const data = await response.json();\n\n        if (data && data.news) {\n            return data.news; // Return the summarized weather news\n        } else {\n            console.warn('No relevant weather news found for the given city.');\n            return 'No relevant weather news found.';\n        }\n    } catch (error) {\n        console.error(`Error fetching weather news for city \"${city}\" from ${backendUrl}:`, error.message);\n        return 'Error: Unable to fetch weather news.';\n    }\n};\n\nexport default fetchAndSummarizeWeatherNews;"],"mappings":"AAAA;AACA,MAAMA,4BAA4B,GAAG,MAAOC,IAAI,IAAK;EACjD,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,wBAAwB,EAAE;IACvCC,OAAO,CAACC,KAAK,CAAC,8FAA8F,CAAC;IAC7G,OAAO,uCAAuC;EAClD;EAEA,MAAMC,UAAU,GAAGL,OAAO,CAACC,GAAG,CAACC,wBAAwB;EAEvD,IAAI,CAACH,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IACnCI,OAAO,CAACC,KAAK,CAAC,0DAA0D,CAAC;IACzE,OAAO,gCAAgC;EAC3C;EAEA,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGF,UAAU,mBAAmB,EAAE;MAC3DG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb;MAAK,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;MACdV,OAAO,CAACC,KAAK,CAAC,0BAA0BE,QAAQ,CAACQ,MAAM,SAAST,UAAU,mBAAmB,CAAC;MAC9F,OAAO,gDAAgDC,QAAQ,CAACQ,MAAM,IAAI;IAC9E;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,IAAID,IAAI,IAAIA,IAAI,CAACE,IAAI,EAAE;MACnB,OAAOF,IAAI,CAACE,IAAI,CAAC,CAAC;IACtB,CAAC,MAAM;MACHd,OAAO,CAACe,IAAI,CAAC,oDAAoD,CAAC;MAClE,OAAO,iCAAiC;IAC5C;EACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,yCAAyCL,IAAI,UAAUM,UAAU,GAAG,EAAED,KAAK,CAACe,OAAO,CAAC;IAClG,OAAO,sCAAsC;EACjD;AACJ,CAAC;AAED,eAAerB,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}