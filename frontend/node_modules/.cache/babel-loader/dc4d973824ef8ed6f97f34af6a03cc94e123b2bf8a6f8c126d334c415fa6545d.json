{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/apps-dev/myweather-app3/frontend/src/components/forecast/forecast.js\";\nimport React from \"react\";\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from \"react-accessible-accordion\";\nimport \"./forecast.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst Forecast = ({\n  data\n}) => {\n  // Add check for data validity\n  if (!data || !data.list || !Array.isArray(data.list) || data.list.length === 0) {\n    // Return null or some placeholder if data is not valid\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-nodata\",\n      children: \"Forecast data not available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  const dayInAWeek = new Date().getDay();\n  const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\n\n  // Use slice() instead of splice()\n  const forecastItems = data.list.slice(0, 7);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"title\",\n      children: \"Upcoming Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      allowZeroExpanded: true,\n      children: forecastItems.map((item, idx) => {\n        var _item$main;\n        return /*#__PURE__*/_jsxDEV(AccordionItem, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n            children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"daily-item\",\n                children: [item.weather && item.weather[0] && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `icons/${item.weather[0].icon}.png`,\n                  className: \"icon-small\",\n                  alt: \"weather\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"day\",\n                  children: forecastDays[idx]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"description\",\n                  children: item.weather && item.weather[0] ? item.weather[0].description : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"min-max\",\n                  children: item.main ? `${Math.round(item.main.temp_max)}째C / ${Math.round(item.main.temp_min)}째C` : 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"daily-details-grid\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"daily-details-grid-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Pressure:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [((_item$main = item.main) === null || _item$main === void 0 ? void 0 : _item$main.pressure) || 'N/A', \" hPa\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 20\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","WEEK_DAYS","Forecast","data","list","Array","isArray","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dayInAWeek","Date","getDay","forecastDays","slice","concat","forecastItems","allowZeroExpanded","map","item","idx","_item$main","weather","src","icon","alt","description","main","Math","round","temp_max","temp_min","pressure","_c","$RefreshReg$"],"sources":["/home/vboxuser/apps-dev/myweather-app3/frontend/src/components/forecast/forecast.js"],"sourcesContent":["import React from \"react\";\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from \"react-accessible-accordion\";\nimport \"./forecast.css\";\n\nconst WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nconst Forecast = ({ data }) => {\n  // Add check for data validity\n  if (!data || !data.list || !Array.isArray(data.list) || data.list.length === 0) {\n    // Return null or some placeholder if data is not valid\n    return <div className=\"forecast-nodata\">Forecast data not available.</div>;\n  }\n\n  const dayInAWeek = new Date().getDay();\n  const forecastDays = WEEK_DAYS.slice(dayInAWeek, WEEK_DAYS.length).concat(WEEK_DAYS.slice(0, dayInAWeek));\n\n  // Use slice() instead of splice()\n  const forecastItems = data.list.slice(0, 7);\n\n  return (\n    <>\n      {/* Consider renaming \"Daily\" if showing time slots */}\n      <label className=\"title\">Upcoming Forecast</label>\n      <Accordion allowZeroExpanded>\n        {/* Map over the new forecastItems array */}\n        {forecastItems.map((item, idx) => (\n          <AccordionItem key={idx}>\n            <AccordionItemHeading>\n              <AccordionItemButton>\n                <div className=\"daily-item\">\n                  {/* Add check for weather array */}\n                  {item.weather && item.weather[0] && (\n                     <img src={`icons/${item.weather[0].icon}.png`} className=\"icon-small\" alt=\"weather\" />\n                  )}\n                  <label className=\"day\">{forecastDays[idx]}</label>\n                  <label className=\"description\">{item.weather && item.weather[0] ? item.weather[0].description : 'N/A'}</label>\n                  <label className=\"min-max\">\n                    {/* Add checks for main temp data */}\n                    {item.main ? `${Math.round(item.main.temp_max)}째C / ${Math.round(item.main.temp_min)}째C` : 'N/A'}\n                  </label>\n                </div>\n              </AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel>\n              {/* Add checks for nested data in panel too if needed */}\n              <div className=\"daily-details-grid\">\n                 {/* ... panel items ... ensure item.main, item.clouds etc. exist */}\n                 <div className=\"daily-details-grid-item\">\n                   <label>Pressure:</label>\n                   <label>{item.main?.pressure || 'N/A'} hPa</label> {/* Optional chaining example */}\n                 </div>\n                 {/* ... other items ... */}\n              </div>\n            </AccordionItemPanel>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </>\n  );\n};\n\nexport default Forecast;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}